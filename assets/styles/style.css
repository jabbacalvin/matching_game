* {
    box-sizing: border-box;
  }

body {
    height: 100vh;
    margin: 0;
    font-family: 'Acme', sans-serif;
    background-color: skyblue;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

header {
    font-size: 7vmin;
    font-weight: bolder;
    letter-spacing: 1vmin;
}

h1 {
    font-size: 2vmin;
    font-weight: bold;
    letter-spacing: 1vmin;
    margin: 0;
}

.categories {
    display: grid;
    grid-gap: 1vmin;
    grid-template-columns: repeat(3, 30vmin);
    grid-template-rows: repeat(3, 5vmin);
    padding: 1vmin;
    justify-content: center;
    background-color: rgba(87, 87, 87, 0.6);
    border: 0.6vmin solid;
    background-clip: padding-box;
}

.category {
    font-family: 'Acme', sans-serif;
    border-radius: 1.75vmin;
    font-size: 2vmin;
    border: 0.5vmin solid;
    filter: drop-shadow(0.8vmin 0.8vmin 0 rgba(0, 0, 0, 0.4));
    cursor: pointer;
}
.category:hover {
    font-size: 2.5vmin;
    font-weight: bold;
    filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0.8));
    transform: translateY(0.5vmin);
    background-color: lightgoldenrodyellow;
    white-space: nowrap;
}

.focusCategory {
    font-size: 2.5vmin;
    font-weight: bold;
    background-color: aquamarine;
    transform: translateY(0.5vmin);
    filter: drop-shadow(0 0 0);
    white-space: nowrap;
}

.gameContainer {
    display: grid;
    justify-content: center;
    gap: 2.5vmin;
    padding: 1.5vmin;
    grid-template-areas: 
    ". gameBoard"
    ". footer";
}

.gameBoardContainer {
    grid-area: gameBoard;
    display: grid;
    justify-content: center;
    gap: 2.5vmin;
    grid-template-areas: 
    "categoryItems separator matchingItems";
}

#won {
    display: none;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.8);
    padding: 3vmin;
}

#wonMessage {
    font-size: 18vmin;
    word-wrap: break-word;
    color: white;
}

.categoryItems {
    grid-area: categoryItems;
    display: grid;
    grid-gap: 1.5vmin;
    grid-template-columns: repeat(2, 10vmin);
    grid-template-rows: repeat(5, 10vmin);
}

.categoryItem {
    padding: 1vmin;
    border-radius: 3vmin;
    background-size: cover;
    background-color: white;
    border: 0.4vmin solid black;
    position: relative;
    filter: drop-shadow(0.8vmin 0.8vmin 0 rgba(0, 0, 0, 0.4));
}
.categoryItem:hover {
    background-color: lightgrey;
    filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0.8));
    transform: translateY(0.5vmin);
}

img {
    padding: 1vmin;
    width: 100%;
    height: 100%; 
    object-fit: cover;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    cursor: grab;
}

.separator {
    grid-area: separator;
    border-left: 0.6vmin solid black;
    height: 56vmin;
}

.matchingItems {
    grid-area: matchingItems;
    display: grid;
    grid-gap: 1vmin;
    grid-template-columns: repeat(3, 18vmin);
    grid-template-rows: repeat(3, 18vmin);
}

.matchingItem {
    padding: 1vmin;
    border-radius: 5vmin;
    background-size: cover;
    background-color: white;
    border: 0.4vmin solid black;
    position: relative;
    box-shadow: inset 0 0 1.5vmin black;
    cursor: crosshair;
}

.focusMatches {
    box-shadow: 0 0 0;
}

.focusMatchesCorrect {
    background-color: aquamarine;
    border: 0.6vmin solid green;
    box-shadow: 0 0 0;
}

.focusMatchesWrong {
    animation: shake 0.5s;
    animation-iteration-count: 1.5;
    background-color: lightcoral;
    border: 0.6vmin solid red;
}
.focusMatchesWrong:after {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    content: "\274c";
    font-size: 8vmin; 
    color: #FFF;
    text-align: center;
}


@keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
}

.footer {
    grid-area: footer;
    margin: 0 0 0 auto;
}

#myAudio {
    width: 65vmin;
    height: 75%;
    vertical-align: bottom;
    filter: drop-shadow(0.8vmin 0.8vmin 0 rgba(0, 0, 0, 0.4));
    padding-right: 2vmin;
}

.resetBtn {
    padding: 1vmin 5vmin;
    border-radius: 1vmin;
    font-size: 2vmin;
    font-weight: bold;
    background-color: lightcoral;
    border: 0.4vmin solid black;
    filter: drop-shadow(0.8vmin 0.8vmin 0 rgba(0, 0, 0, 0.4));
}
.resetBtn:hover {
    filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0.8));
    transform: translateY(0.5vmin);
    cursor: pointer;
}